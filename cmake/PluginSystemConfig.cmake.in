@PACKAGE_INIT@

include(${CMAKE_CURRENT_LIST_DIR}/PluginSystemTargets.cmake)

# Check if required components are available
foreach(_comp ${PluginSystem_FIND_COMPONENTS})
    if(NOT TARGET PluginSystem::${_comp})
        set(PluginSystem_FOUND FALSE)
        set(PluginSystem_NOT_FOUND_MESSAGE "Requested component '${_comp}' is not available.")
    endif()
endforeach()

# Include dependencies
include(CMakeFindDependencyMacro)

# Find spdlog if LogPlugin is requested
if("LogPlugin" IN_LIST PluginSystem_FIND_COMPONENTS)
    find_dependency(spdlog REQUIRED)
endif()

# Find Lua if LuaPlugin is requested
if("LuaPlugin" IN_LIST PluginSystem_FIND_COMPONENTS)
    find_dependency(Lua REQUIRED)
endif()

# Find Python and pybind11 if PythonPlugin is requested
if("PythonPlugin" IN_LIST PluginSystem_FIND_COMPONENTS)
    find_dependency(Python COMPONENTS Interpreter Development REQUIRED)
    find_dependency(pybind11 REQUIRED)
endif()

check_required_components(PluginSystem)